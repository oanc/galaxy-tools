@Grab("com.github.jmchilton.blend4j:blend4j:0.1.0")
import com.github.jmchilton.blend4j.galaxy.GalaxyInstance;
import com.github.jmchilton.blend4j.galaxy.GalaxyInstanceFactory;
import com.github.jmchilton.blend4j.galaxy.LibrariesClient;
import com.github.jmchilton.blend4j.galaxy.beans.FileLibraryUpload;
import com.github.jmchilton.blend4j.galaxy.beans.Library;
import com.github.jmchilton.blend4j.galaxy.beans.LibraryContent;
import com.sun.jersey.api.client.ClientResponse;

// TODO 1.2: Place Galaxy URL here
String galaxyURL = "http://localhost:8000";

// TODO 1.3: Place Galaxy Admin API Key here
String apiKey = "20b2f1acbc6a8090dcfab592bc302186";

GalaxyInstance galaxyInstance = GalaxyInstanceFactory.get(galaxyURL, apiKey);

// create Galaxy Library
LibrariesClient librariesClient = galaxyInstance.getLibrariesClient();
def libraries = librariesClient.libraries.findAll { it.name == 'Exercise1' }
if (libraries == null || libraries.size() == 0) {
	throw new Exception("Unable to find library Execise1")
}
Library library = libraries[0]
//Library library = new Library("Exercise1");
//Library persistedLibrary = librariesClient.createLibrary(library);
//System.out.println("Created Library " + persistedLibrary.getName() + " with id=" + persistedLibrary.getId());

// TODO 1.4: Add path to 'src/main/resources/test.fasta' file here
LibraryContent rootFolder = librariesClient.getRootFolder(library.getId());
(1..9).each { id ->

	File fileToUpload = new File("/tmp/index/${id}.txt");
	// upload file to Library
	FileLibraryUpload upload = new FileLibraryUpload();
	upload.setFolderId(rootFolder.getId());

	upload.setFile(fileToUpload);
	upload.setName(fileToUpload.getName());

	ClientResponse uploadResponse = librariesClient.uploadFile(library.getId(), upload);
	if (ClientResponse.Status.OK.equals(uploadResponse.getClientResponseStatus()))
	{
		System.out.println("Successfully uploaded " + fileToUpload.getName());
	}
	else
	{
		System.out.println("Could not upload " + fileToUpload.getName());
	}		
}